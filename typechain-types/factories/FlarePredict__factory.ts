/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { FlarePredict, FlarePredictInterface } from "../FlarePredict";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "EmergencyResolution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes21",
        name: "feedId",
        type: "bytes21",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPayout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "platformFee",
        type: "uint256",
      },
    ],
    name: "MarketResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isYes",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newOdds",
        type: "uint256",
      },
    ],
    name: "PositionTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
    ],
    name: "WinningsClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PLATFORM_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESOLUTION_BUFFER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isYes",
        type: "bool",
      },
    ],
    name: "calculateOdds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
    ],
    name: "claimWinnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "bytes21",
        name: "_feedId",
        type: "bytes21",
      },
      {
        internalType: "enum FlarePredict.MarketType",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "createMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_finalValue",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
    ],
    name: "emergencyResolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes21",
        name: "",
        type: "bytes21",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feedMarkets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes21",
        name: "_feedId",
        type: "bytes21",
      },
    ],
    name: "getActiveMarketsByFeed",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bytes21",
        name: "feedId",
        type: "bytes21",
      },
      {
        internalType: "enum FlarePredict.MarketType",
        name: "marketType",
        type: "uint8",
      },
      {
        internalType: "enum FlarePredict.MarketStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lowerBound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "upperBound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resolutionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalYesStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNoStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finalValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creatorReward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "emergencyResolved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isYes",
        type: "bool",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "platformTreasury",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isYes",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_finalValue",
        type: "uint256",
      },
    ],
    name: "resolveMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFeesCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVolume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userMarkets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611834908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062468ef514610f2957806311f1fc9914610eab5780632476080714610e8d57806334fbc9a114610e7157806337a7530214610d4c5780635e0826c814610b9d5780635f81a57c14610b7f578063605573331461097857806360c6d8ae1461095a5780636540742f14610937578063677bd9ff146106035780637e95b523146105df5780639ed9c74d146103d2578063a028bd58146103b5578063b1283e7714610263578063b47cf6af1461020c578063d5c20ccf146101eb578063db0f871d14610190578063e138818c146101725763e684d718146100f757600080fd5b3461016d57604036600319011261016d576024356001600160a01b0381169081900361016d5760043560005260026020526040600020906000526020526080604060002080549060ff60026001830154920154916040519384528181161515602085015260081c16151560408301526060820152f35b600080fd5b3461016d57600036600319011261016d576020600754604051908152f35b3461016d57604036600319011261016d576004356001600160a01b0381169081900361016d576024359060005260036020526040600020805482101561016d576020916101dc91611599565b90549060031b1c604051908152f35b3461016d5760206102046101fe3661145a565b906116e0565b604051908152f35b3461016d57604036600319011261016d5761022561143f565b602435906001600160581b03191660005260046020526040600020805482101561016d5760209161025591611599565b90546040519160031b1c8152f35b3461016d57602036600319011261016d576004356000526001602052604060002061028d816114b3565b9061029a600182016114b3565b6002820154906003830154926004810154600582015460068301546007840154600885015490600986015492600a87015494600160a01b60019003600b8901541696600c89015498600d015460ff1699604051809e610200808352820161030091611559565b90808203906020015261031291611559565b9a8d6001600160581b03198260581b1690604001528060a81c60ff166003111561039f57808e606060ff809460a81c1691015260b01c169b60048d101561039f578d9c60808e015260a08d015260c08c015260e08b01526101008a01526101208901526101408801526101608701526101808601526101a08501526101c084015215156101e08301520390f35b634e487b7160e01b600052602160045260246000fd5b3461016d57600036600319011261016d57602060405161012c8152f35b6103db3661145a565b908060005260206001815260406000209260ff600285015460b01c16600481101561039f5761040a9015611607565b60068401544210156105a95767016345785d8a000034101580610596575b1561055c5782600052600282526040600020336000528252604060002093845461051757906104ae9134865560018601958215159660ff1981541660ff891617905560024291015581600014610502576008016104863482546115b1565b90555b610495346005546115b1565b6005556104a284336117a1565b156104e7575b836116e0565b90604051938452349084015260408301527fb31d20022c2878238365d9860bdf83dd3b5467aeaa0f62771d7cb7bd63bf58d060603393a3005b33600052600383526104fd8460406000206115cd565b6104a8565b6009016105103482546115b1565b9055610489565b60405162461bcd60e51b815260048101849052601760248201527f506f736974696f6e20616c7265616479206578697374730000000000000000006044820152606490fd5b60405162461bcd60e51b8152600481018390526012602482015271125b9d985b1a590818995d08185b5bdd5b9d60721b6044820152606490fd5b50683635c9adc5dea00000341115610428565b60405162461bcd60e51b815260048101839052600e60248201526d13585c9ad95d08195e1c1a5c995960921b6044820152606490fd5b3461016d57600036600319011261016d576020604051683635c9adc5dea000008152f35b3461016d5760208060031936011261016d576004358060005260018252604060002060028101549260ff93848160b01c16600481101561039f57600281036108fc57846000526002835260406000203360005283526040600020938454156108c9576001850192835492888460081c16610892576040519161020083019083821067ffffffffffffffff83111761087c578a916040526106a2856114b3565b84526106b0600186016114b3565b888501526001600160581b03198160581b16604085015260a81c16600381101561039f5760608301526080820152600382015460a0820152600482015460c0820152600582015460e082015260068201549261010093848301526007830154610120830152610772600884019283546101408201528a600d60098701968754610160850152600a81015461018085015260018060a01b03600b820154166101a0850152600c8101546101c085015201541615156101e08201528a831690611773565b1561083f57505490549061078682826115b1565b60c881029080820460c81481151715610821576127106107a7920490611665565b9184549889166000146108375750945b54818102918183041490151715610821577f5380cf6fe903b40c6d5a9e0dfbca2f3a423f0a21520b4d5947ed5169bdba946d946107f391611645565b9561ff001916179055610816600080808088335af1610810611672565b506116a2565b6040519384523393a3005b634e487b7160e01b600052601160045260246000fd5b9050946107b7565b61ff0019169092179092555050604051600081523394507f5380cf6fe903b40c6d5a9e0dfbca2f3a423f0a21520b4d5947ed5169bdba946d9250a3005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260048101879052600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052600b60248201526a2737903837b9b4ba34b7b760a91b6044820152606490fd5b60405162461bcd60e51b815260048101849052601360248201527213585c9ad95d081b9bdd081c995cdbdb1d9959606a1b6044820152606490fd5b3461016d57600036600319011261016d57602060405167016345785d8a00008152f35b3461016d57600036600319011261016d576020600654604051908152f35b3461016d57604036600319011261016d576004356024803590826000526001602052604060002060028101805460ff8160b01c166004811015610b6a576109bf9015611607565b6006830154804210610b315761012c8101809111610b1c574211610ad857600a830185905542600784015560ff60b01b1916600160b11b17905560088101546009820154610a0c916115b1565b9060c8820282810460c81483151715610ac357612710900492600a840290848204600a1485151715610aaf5750837f9f7cb4c52f35416365b5664015fc31776d715fff39c7b9cb7529d135f9885f499593610a85600c606097956064610a9c96049182910155610a7f6007549185611665565b906115b1565b600755610a94826006546115b1565b600655611665565b60405192835260208301526040820152a2005b634e487b7160e01b60009081526011600452fd5b83634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b8152602060048201526018818601527f5265736f6c7574696f6e2077696e646f772070617373656400000000000000006044820152606490fd5b84634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b8152602060048201526012818701527113585c9ad95d081b9bdd08195e1c1a5c995960721b6044820152606490fd5b84634e487b7160e01b60005260216004526000fd5b3461016d57600036600319011261016d576020600554604051908152f35b3461016d5760208060031936011261016d576affffffffffffffffffffff19610bc461143f565b16600052600481526040600020600080918054925b838110610cf35750610c03610bed8361175b565b92610bfb60405194856113ba565b80845261175b565b8285019390601f190136853760009160005b828110610c5f57868587604051928392818401908285525180915260408401929160005b828110610c4857505050500390f35b835185528695509381019392810192600101610c39565b610c698183611599565b9054600391821b1c6000526001885260ff60026040600020015460b01c16600481101561039f5715610ca5575b50610ca0906115be565b610c15565b610cb28284969396611599565b9054911b1c93610cc1826115be565b948651831015610cdd5788610ca09360051b8801015290610c96565b634e487b7160e01b600052603260045260246000fd5b610cfd8183611599565b90549060031b1c6000526001855260ff60026040600020015460b01c16600481101561039f5715610d37575b610d32906115be565b610bd9565b91610d44610d32916115be565b929050610d29565b3461016d57606036600319011261016d5760043560443567ffffffffffffffff811161016d57610d809036906004016113f8565b8160005260016020526040600020906002820190815460ff8160b01c16600481101561039f57610db09015611607565b600684015461012c810180911161082157421115610e3457602435600a85015542600785015560ff60b01b1916600160b11b17909155600d909101805460ff1916600117905560405160208082527fc1d59a4936760ba547d29ff05c1c2b53bb80dd1aff38008d1ca5aa3031288c40928291610e2f9190830190611559565b0390a2005b60405162461bcd60e51b81526020600482015260156024820152742ab9b2903737b936b0b6103932b9b7b63aba34b7b760591b6044820152606490fd5b3461016d57600036600319011261016d57602060405160c88152f35b3461016d57600036600319011261016d576020600054604051908152f35b3461016d57602036600319011261016d57600754600435818111610eec576000808083610edc8295610eea97611665565b600755335af1610810611672565b005b60405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420747265617375727960581b6044820152606490fd5b3461016d5760c036600319011261016d5760043567ffffffffffffffff811161016d57610f5a9036906004016113f8565b60243567ffffffffffffffff811161016d57610f7a9036906004016113f8565b906044356affffffffffffffffffffff198116900361016d576003606435101561016d57610e1042018042116108215760a43511156113815762278d0042018042116108215760a4351015611349578051801515908161133d575b50156113085760005490610fe8826115be565b6000558160005260016020526040600020815167ffffffffffffffff811161087c576110148254611479565b601f81116112c4575b50806020601f821160011461125d57600091611252575b508160011b916000199060031b1c19161781555b835167ffffffffffffffff811161087c576110666001830154611479565b94601f861161120b575b602095508590601f831160011461119a57600b9392916000918361118f575b50508160011b916000199060031b1c19161760018201555b60028101805460443560581c9068ffffffffffffffffff60b81b161760ff60a81b60643560a81b16179055608435600382015560a435600682015501336bffffffffffffffffffffffff60a01b82541617905533600052600383526111108260406000206115cd565b6001600160581b031960443516600052600483526111328260406000206115cd565b817f79c73b78d90a2bfb19396e4553b7866d34bb37b492b74079cd7930a12bbf7c466040516001600160581b031960443516815260a43586820152606060408201528061118433956060830190611559565b0390a3604051908152f35b01519050878061108f565b9060018401600052866000209160005b601f19851681106111f45750918391600193600b9695601f198116106111db575b505050811b0160018201556110a7565b015160001960f88460031b161c191690558780806111cb565b9192886001819286850151815501940192016111aa565b600183016000526020600020601f830160051c81016020841061124b575b601f880160051c8201811061123f575050611070565b60008155600101611229565b5080611229565b905083015186611034565b91508260005260206000206000925b601f19831684106112ac576001935082601f19811610611293575b5050811b018155611048565b85015160001960f88460031b161c191690558680611287565b8581015182556020938401936001909201910161126c565b826000526020600020601f830160051c810160208410611301575b601f830160051c820181106112f557505061101d565b600081556001016112df565b50806112df565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964207469746c6560981b6044820152606490fd5b60649150111583610fd5565b60405162461bcd60e51b815260206004820152601060248201526f2232b0b23634b732903a37b7903330b960811b6044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152702232b0b23634b732903a37b79039b7b7b760791b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761087c57604052565b67ffffffffffffffff811161087c57601f01601f191660200190565b81601f8201121561016d5780359061140f826113dc565b9261141d60405194856113ba565b8284526020838301011161016d57816000926020809301838601378301015290565b600435906affffffffffffffffffffff198216820361016d57565b604090600319011261016d5760043590602435801515810361016d5790565b90600182811c921680156114a9575b602083101461149357565b634e487b7160e01b600052602260045260246000fd5b91607f1691611488565b90604051918260008254926114c784611479565b90818452600194858116908160001461153657506001146114f3575b50506114f1925003836113ba565b565b9093915060005260209081600020936000915b81831061151e5750506114f1935082010138806114e3565b85548884018501529485019487945091830191611506565b9150506114f194506020925060ff191682840152151560051b82010138806114e3565b919082519283825260005b848110611585575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611564565b8054821015610cdd5760005260206000200190600090565b9190820180921161082157565b60001981146108215760010190565b80546801000000000000000081101561087c576115ef91600182018155611599565b819291549060031b91821b91600019901b1916179055565b1561160e57565b60405162461bcd60e51b815260206004820152600f60248201526e26b0b935b2ba103737ba1037b832b760891b6044820152606490fd5b811561164f570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161082157565b3d1561169d573d90611683826113dc565b9161169160405193846113ba565b82523d6000602084013e565b606090565b156116a957565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6000526001602052604060002060088101549081158061174f575b611746576009015461170d81836115b1565b921561173e5750905b811561173657612710808302928304036108215761173391611645565b90565b50506126ac90565b905090611716565b50505061138890565b506009810154156116fb565b67ffffffffffffffff811161087c5760051b60200190565b6060810151600381101561039f571561178d575050600090565b60a061018082015191015111159015151490565b6001600160a01b031660009081526003602081905260408220805493925b8481106117d0575050505050600090565b836117db8284611599565b905490851b1c146117f4576117ef906115be565b6117bf565b505050505060019056fea264697066735822122084abb823c68f09cddbb25ac3b12aa2cc4f9c4a4ebc5dc9f289c35ff08fb4b2aa64736f6c63430008130033";

type FlarePredictConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlarePredictConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlarePredict__factory extends ContractFactory {
  constructor(...args: FlarePredictConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FlarePredict & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlarePredict__factory {
    return super.connect(runner) as FlarePredict__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlarePredictInterface {
    return new Interface(_abi) as FlarePredictInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlarePredict {
    return new Contract(address, _abi, runner) as unknown as FlarePredict;
  }
}
